<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OTP Verification - KITAB4U</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Bootstrap Icons -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"
      rel="stylesheet"
    />

    <link
      rel="shortcut icon"
      href="../../images/logo.png"
      type="image/x-icon"
    />

    <style>
      .bg-custom {
        background-color: #d4c5b9;
      }
      .logo-section {
        background-color: #d4c5b9;
      }
      .form-section {
        background-color: #f8f9fa;
      }
      .btn-verify {
        background-color: #1e3a5f;
        border-color: #1e3a5f;
      }
      .btn-verify:hover {
        background-color: #2c4a6b;
        border-color: #2c4a6b;
      }
      .timer-text {
        font-size: 0.9rem;
        color: #6c757d;
      }
      .resend-link {
        color: #007bff;
        text-decoration: none;
        font-size: 0.9rem;
      }
      .resend-link:hover {
        text-decoration: underline;
      }
      .logo-container {
        max-width: 300px;
      }
      .brand-text {
        font-size: 3rem;
        font-weight: bold;
        color: #1e3a5f;
      }
      .brand-4 {
        color: #ff6b35;
      }
      .otp-form {
        max-width: 400px;
      }
      .min-vh-100 {
        min-height: 100vh;
      }
     .disabled {
        cursor: not-allowed;
    }
    </style>
  </head>
  <body>
    <div class="container-fluid p-0">
      <div class="row g-0 min-vh-100">
        <!-- Left Side - Logo Section -->
        <div
          class="col-lg-6 logo-section d-flex align-items-center justify-content-center p-5"
        >
          <img src="../../images/logo.png" alt="logo" class="img-fluid" />
        </div>

        <!-- Right Side - OTP Form Section -->
        <div
          class="col-lg-6 form-section d-flex align-items-center justify-content-center p-5"
        >
          <div class="otp-form w-100">
            <!-- OTP Heading -->
            <h2
              class="text-center mb-5 fw-bold"
              style="font-size: 2.5rem; color: #333"
            >
              OTP
            </h2>

            <!-- Flash Messages Container -->
            <div id="flashMessages"></div>

            <!-- Form -->
            <form id="otpForm">
              <!-- Instructions -->
              <h5 class="mb-3 fw-semibold text-dark">
                Enter The OTP sent to your Email:
              </h5>

              <!-- Timer -->
              <div class="text-end mb-3">
                <span class="timer-text"
                  >Remaining: <span id="timer">00:60s</span></span
                >
              </div>

              <!-- OTP Input -->
              <div class="mb-4">
                <input
                  type="text"
                  class="form-control form-control-lg"
                  id="confirmationCode"
                  name="otp"
                  placeholder="Confirmation Code"
                  maxlength="6"

                  style="
                    border: none;
                    border-bottom: 2px solid #dee2e6;
                    border-radius: 0;
                    background: transparent;
                    padding-left: 0;
                  "
                />
              </div>

              <!-- Verify Button -->
              <div class="mb-4">
                <button
                  type="submit"
                  class="btn btn-verify text-white w-100 py-3 fw-semibold"
                >
                  Verify Email
                </button>
              </div>

              <!-- Resend Link -->
              <div class="text-center">
                <span class="text-muted">Didn't receive an OTP? </span>
                <a href="#" class="resend-link" id='resendLink'>Resend OTP</a>
              </div>
            </form>

            <!-- Bottom Brand -->
            <div class="position-absolute bottom-0 end-0 p-4">
              <small class="text-muted">KITAB4U</small>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Timer and AJAX Script -->
     <script>
   document.addEventListener("DOMContentLoaded", function() {
  let storedTime = parseInt(localStorage.getItem('otpTimer'), 10);
  let timeLeft = isNaN(storedTime) || storedTime <= 0 ? 59 : storedTime;

  const timerElement = document.getElementById('timer');
  const resendLink = document.getElementById('resendLink');
  const flashMessages = document.getElementById('flashMessages');

  function updateTimer() {
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    timerElement.textContent = `${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}s`;
    localStorage.setItem('otpTimer', timeLeft);

    if (timeLeft > 0) {
      resendLink.classList.add('disabled');
      resendLink.style.pointerEvents = 'none';
      resendLink.style.opacity = '0.5';
      timeLeft--;
      setTimeout(updateTimer, 1000);
    } else {
      resendLink.classList.remove('disabled');
      resendLink.style.pointerEvents = 'auto';
      resendLink.style.opacity = '1';
    }
  }

  updateTimer();

  document.getElementById('confirmationCode').focus();
  document.getElementById('confirmationCode').addEventListener('input', function() {
    this.value = this.value.replace(/[^0-9]/g, '');
  });

  document.getElementById('otpForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const otp = document.getElementById('confirmationCode').value;
    const verifyButton = this.querySelector('button[type="submit"]');
    verifyButton.disabled = true;

    try {
      const response = await fetch('/verify-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ otp }),
      });
      const data = await response.json();
      if (data.success) {
        showFlashMessage('success', data.message);
        setTimeout(() => window.location.href = '/', 2000);
      } else {
        showFlashMessage('error', data.message);
      }
    } catch {
      showFlashMessage('error', 'Failed to verify OTP. Please try again.');
    } finally {
      verifyButton.disabled = false;
    }
  });

  async function resendOTP(e) {
    e.preventDefault();
    if (!resendLink.classList.contains('disabled')) {
      localStorage.setItem('otpTimer', 59);
      timeLeft = 59;
      document.getElementById('confirmationCode').value = '';
      document.getElementById('confirmationCode').focus();
      updateTimer();

      try {
        const response = await fetch('/resendOtp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });
        const data = await response.json();
        if (data.success) {
          showFlashMessage('success', data.message);
        } else {
          showFlashMessage('error', data.message);
          if (data.redirect) window.location.href = data.redirect;
        }
      } catch {
        showFlashMessage('error', 'Failed to resend OTP. Please try again.');
      }
    }
  }

  resendLink.addEventListener('click', resendOTP);

  function showFlashMessage(type, message) {
    const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
    flashMessages.innerHTML = `<div class="alert ${alertClass}" role="alert">${message}</div>`;
    setTimeout(() => flashMessages.innerHTML = '', 5000);
  }
});
document.addEventListener("DOMContentLoaded", function() {
  let storedTime = parseInt(localStorage.getItem('otpTimer'), 10);
  let timeLeft = isNaN(storedTime) || storedTime <= 0 ? 59 : storedTime;

  const timerElement = document.getElementById('timer');
  const resendLink = document.getElementById('resendLink');
  const flashMessages = document.getElementById('flashMessages');

  function updateTimer() {
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    timerElement.textContent = `${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}s`;
    localStorage.setItem('otpTimer', timeLeft);

    if (timeLeft > 0) {
      resendLink.classList.add('disabled');
      resendLink.style.pointerEvents = 'none';
      resendLink.style.opacity = '0.5';
      timeLeft--;
      setTimeout(updateTimer, 1000);
    } else {
      resendLink.classList.remove('disabled');
      resendLink.style.pointerEvents = 'auto';
      resendLink.style.opacity = '1';
    }
  }

  updateTimer();

  document.getElementById('confirmationCode').focus();
  document.getElementById('confirmationCode').addEventListener('input', function() {
    this.value = this.value.replace(/[^0-9]/g, '');
  });

  document.getElementById('otpForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const otp = document.getElementById('confirmationCode').value;
    const verifyButton = this.querySelector('button[type="submit"]');
    verifyButton.disabled = true;

    try {
      const response = await fetch('/verify-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ otp }),
      });
      const data = await response.json();
      if (data.success) {
        showFlashMessage('success', data.message);
        setTimeout(() => window.location.href = '/', 2000);
      } else {
        showFlashMessage('error', data.message);
      }
    } catch {
      showFlashMessage('error', 'Failed to verify OTP. Please try again.');
    } finally {
      verifyButton.disabled = false;
    }
  });

  async function resendOTP(e) {
    e.preventDefault();
    if (!resendLink.classList.contains('disabled')) {
      localStorage.setItem('otpTimer', 59);
      timeLeft = 59;
      document.getElementById('confirmationCode').value = '';
      document.getElementById('confirmationCode').focus();
      updateTimer();

      try {
        const response = await fetch('/resendOtp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });
        const data = await response.json();
        if (data.success) {
          showFlashMessage('success', data.message);
        } else {
          showFlashMessage('error', data.message);
          if (data.redirect) window.location.href = data.redirect;
        }
      } catch {
        showFlashMessage('error', 'Failed to resend OTP. Please try again.');
      }
    }
  }

  resendLink.addEventListener('click', resendOTP);

  function showFlashMessage(type, message) {
    const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
    flashMessages.innerHTML = `<div class="alert ${alertClass}" role="alert">${message}</div>`;
    setTimeout(() => flashMessages.innerHTML = '', 5000);
  }
});
document.addEventListener("DOMContentLoaded", function() {
  let storedTime = parseInt(localStorage.getItem('otpTimer'), 10);
  let timeLeft = isNaN(storedTime) || storedTime <= 0 ? 59 : storedTime;

  const timerElement = document.getElementById('timer');
  const resendLink = document.getElementById('resendLink');
  const flashMessages = document.getElementById('flashMessages');

  function updateTimer() {
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    timerElement.textContent = `${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}s`;
    localStorage.setItem('otpTimer', timeLeft);

    if (timeLeft > 0) {
      resendLink.classList.add('disabled');
      resendLink.style.pointerEvents = 'none';
      resendLink.style.opacity = '0.5';
      timeLeft--;
      setTimeout(updateTimer, 1000);
    } else {
      resendLink.classList.remove('disabled');
      resendLink.style.pointerEvents = 'auto';
      resendLink.style.opacity = '1';
    }
  }

  updateTimer();

  document.getElementById('confirmationCode').focus();
  document.getElementById('confirmationCode').addEventListener('input', function() {
    this.value = this.value.replace(/[^0-9]/g, '');
  });

  document.getElementById('otpForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const otp = document.getElementById('confirmationCode').value;
    const verifyButton = this.querySelector('button[type="submit"]');
    verifyButton.disabled = true;

    try {
      const response = await fetch('/verify-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ otp }),
      });
      const data = await response.json();
      if (data.success) {
        showFlashMessage('success', data.message);
        setTimeout(() => window.location.href = '/', 2000);
      } else {
        showFlashMessage('error', data.message);
      }
    } catch {
      showFlashMessage('error', 'Failed to verify OTP. Please try again.');
    } finally {
      verifyButton.disabled = false;
    }
  });

  async function resendOTP(e) {
    e.preventDefault();
    if (!resendLink.classList.contains('disabled')) {
      localStorage.setItem('otpTimer', 59);
      timeLeft = 59;
      document.getElementById('confirmationCode').value = '';
      document.getElementById('confirmationCode').focus();
      updateTimer();

      try {
        const response = await fetch('/resendOtp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });
        const data = await response.json();
        if (data.success) {
          showFlashMessage('success', data.message);
        } else {
          showFlashMessage('error', data.message);
          if (data.redirect) window.location.href = data.redirect;
        }
      } catch {
        showFlashMessage('error', 'Failed to resend OTP. Please try again.');
      }
    }
  }

  resendLink.addEventListener('click', resendOTP);

  function showFlashMessage(type, message) {
    const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
    flashMessages.innerHTML = `<div class="alert ${alertClass}" role="alert">${message}</div>`;
    setTimeout(() => flashMessages.innerHTML = '', 5000);
  }
});
</script>
  </body>
</html>